{"ast":null,"code":"import _slicedToArray from \"/home/admi/work/redis-todo/script/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/admi/work/redis-todo/script/src/components/TodoApp.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\nimport PopUpNote from './PopUpNote';\nimport PopUpDate from './PopUpDate';\nimport './style.css';\n\nfunction TodoApp() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItem = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showNote = _useState6[0],\n        setCloseNote = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showDate = _useState8[0],\n        setCloseDate = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        filteredVal = _useState10[0],\n        setFilter = _useState10[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = await fetch('http://localhost:3001/todos');\n      const data = await url.json();\n      const a = data.map(item => {\n        return {\n          id: Number(item.id),\n          complete: false,\n          note: false,\n          noteValue: '',\n          dueDate: false,\n          updateDate: '',\n          saveDate: false\n        };\n      });\n      console.log(a); // setItem(data)\n    }\n\n    fetchData();\n  }, []); // useEffect(() => {\n\n  async function addToDb(url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    await response.json();\n  } // })\n\n\n  const handleInput = event => setInput(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const item = {\n      id: Date.now(),\n      text: input,\n      complete: false,\n      note: false,\n      noteValue: '',\n      dueDate: false,\n      updateDate: '',\n      saveDate: false\n    };\n    const str = item.text.trim();\n    addToDb('http://localhost:3001/todos', item);\n    if (str === '') alert('Enter the values');else setItem([item, ...items]);\n    setInput('');\n  };\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key);\n    setItem(item);\n  };\n\n  const handleCheckBox = key => {\n    const item = items.map(item => {\n      if (item.id === key) {\n        item.complete = !item.complete;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(item);\n  };\n\n  const handleUpdate = (key, event) => {\n    const item = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(item);\n  };\n\n  const handleNote = key => {\n    setCloseNote(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.note = true;\n        return item;\n      } else {\n        item.note = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleDueDate = key => {\n    setCloseDate(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.dueDate = true;\n        return item;\n      } else {\n        item.dueDate = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value.split('-').reverse().join('-');\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.saveDate = true;\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    setItem(newItems);\n  };\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = '';\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    setItem(newItems);\n  };\n\n  const handleCloseNote = () => setCloseNote(false);\n\n  const handleCloseDate = () => setCloseDate(false);\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') {\n      setFilter(items.filter(item => item.complete));\n    }\n\n    if (val === 'Pending') setFilter(items.filter(item => !item.complete));\n    if (val === 'All') setFilter(null);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, console.log(items), React.createElement(AddTodo, {\n    input: input,\n    onInput: event => handleInput(event),\n    onSubmit: event => handleSubmit(event),\n    onUpdatedFilter: filteredVal => handleFilterTodo(filteredVal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    items: filteredVal || items,\n    onDelete: key => handleDelete(key),\n    onCheckBox: key => handleCheckBox(key),\n    onUpdate: (key, event) => handleUpdate(key, event),\n    onNote: key => handleNote(key),\n    onDueDate: key => handleDueDate(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })), items.map(item => {\n    return item.note && React.createElement(PopUpNote, {\n      key: item.id,\n      item: item,\n      onPopUpNote: (event, id) => handlePopUpNote(event, id),\n      show: showNote,\n      onClose: () => handleCloseNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    });\n  }), items.map(item => {\n    return item.dueDate && React.createElement(PopUpDate, {\n      key: item.id,\n      id: item.id,\n      onUpdateDate: (event, id) => handleUpdateDate(event, id),\n      date: item.updateDate,\n      onSaveDate: id => handleSaveDate(id),\n      show: showDate,\n      onCloseDate: () => handleCloseDate(),\n      onNoDate: id => handleNoDate(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/admi/work/redis-todo/script/src/components/TodoApp.js"],"names":["React","useState","useEffect","AddTodo","Todo","PopUpNote","PopUpDate","TodoApp","input","setInput","items","setItem","showNote","setCloseNote","showDate","setCloseDate","filteredVal","setFilter","fetchData","url","fetch","data","json","a","map","item","id","Number","complete","note","noteValue","dueDate","updateDate","saveDate","console","log","addToDb","response","method","body","JSON","stringify","headers","handleInput","event","target","value","handleSubmit","preventDefault","Date","now","text","str","trim","alert","handleDelete","key","filter","handleCheckBox","handleUpdate","handleNote","newItems","handlePopUpNote","handleDueDate","handleUpdateDate","split","reverse","join","handleSaveDate","handleNoDate","handleCloseNote","handleCloseDate","handleFilterTodo","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport AddTodo from './AddTodo'\nimport Todo from './Todo'\nimport PopUpNote from './PopUpNote'\nimport PopUpDate from './PopUpDate'\nimport './style.css'\n\nfunction TodoApp () {\n  const [input, setInput] = useState('')\n  const [items, setItem] = useState([])\n  const [showNote, setCloseNote] = useState(true)\n  const [showDate, setCloseDate] = useState(true)\n  const [filteredVal, setFilter] = useState(null)\n\n  useEffect(() => {\n    async function fetchData () {\n      const url = await fetch('http://localhost:3001/todos')\n      const data = await url.json()\n      const a = data.map(item => {\n        return {\n          id: Number(item.id),\n          complete: false,\n          note: false,\n          noteValue: '',\n          dueDate: false,\n          updateDate: '',\n          saveDate: false\n        }\n      })\n      console.log(a)\n      // setItem(data)\n    }\n    fetchData()\n  }, [])\n\n  // useEffect(() => {\n  async function addToDb (url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    await response.json()\n  }\n\n  // })\n\n  const handleInput = event => setInput(event.target.value)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const item = {\n      id: Date.now(),\n      text: input,\n      complete: false,\n      note: false,\n      noteValue: '',\n      dueDate: false,\n      updateDate: '',\n      saveDate: false\n    }\n    const str = item.text.trim()\n    addToDb('http://localhost:3001/todos', item)\n    if (str === '') alert('Enter the values')\n    else setItem([item, ...items])\n    setInput('')\n  }\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key)\n    setItem(item)\n  }\n\n  const handleCheckBox = key => {\n    const item = items.map(item => {\n      if (item.id === key) {\n        item.complete = !item.complete\n        return item\n      }\n      return item\n    })\n    setItem(item)\n  }\n\n  const handleUpdate = (key, event) => {\n    const item = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(item)\n  }\n\n  const handleNote = key => {\n    setCloseNote(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.note = true\n        return item\n      } else {\n        item.note = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleDueDate = key => {\n    setCloseDate(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.dueDate = true\n        return item\n      } else {\n        item.dueDate = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value\n          .split('-')\n          .reverse()\n          .join('-')\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.saveDate = true\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    setItem(newItems)\n  }\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = ''\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    setItem(newItems)\n  }\n\n  const handleCloseNote = () => setCloseNote(false)\n\n  const handleCloseDate = () => setCloseDate(false)\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') {\n      setFilter(items.filter(item => item.complete))\n    }\n    if (val === 'Pending') setFilter(items.filter(item => !item.complete))\n    if (val === 'All') setFilter(null)\n  }\n\n  return (\n    <main>\n      {console.log(items)}\n      <AddTodo\n        input={input}\n        onInput={event => handleInput(event)}\n        onSubmit={event => handleSubmit(event)}\n        onUpdatedFilter={filteredVal => handleFilterTodo(filteredVal)}\n      />\n      <ul>\n        <Todo\n          items={filteredVal || items}\n          onDelete={key => handleDelete(key)}\n          onCheckBox={key => handleCheckBox(key)}\n          onUpdate={(key, event) => handleUpdate(key, event)}\n          onNote={key => handleNote(key)}\n          onDueDate={key => handleDueDate(key)}\n        />\n      </ul>\n\n      {items.map(item => {\n        return (\n          item.note && (\n            <PopUpNote\n              key={item.id}\n              item={item}\n              onPopUpNote={(event, id) => handlePopUpNote(event, id)}\n              show={showNote}\n              onClose={() => handleCloseNote()}\n            />\n          )\n        )\n      })}\n      {items.map(item => {\n        return (\n          item.dueDate && (\n            <PopUpDate\n              key={item.id}\n              id={item.id}\n              onUpdateDate={(event, id) => handleUpdateDate(event, id)}\n              date={item.updateDate}\n              onSaveDate={id => handleSaveDate(id)}\n              show={showDate}\n              onCloseDate={() => handleCloseDate()}\n              onNoDate={id => handleNoDate(id)}\n            />\n          )\n        )\n      })}\n    </main>\n  )\n}\n\nexport default TodoApp\n"]},"metadata":{},"sourceType":"module"}