{"ast":null,"code":"import _slicedToArray from \"/home/admi/work/redis-todo/script/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/admi/work/redis-todo/script/src/components/todoApp/TodoApp.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddTodo from '../addTodo/AddTodo';\nimport Todo from '../todo/Todo';\nimport PopUpNote from '../popUp/PopUpNote';\nimport PopUpDate from '../popUp/PopUpDate';\nimport './style.css';\n\nfunction TodoApp() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItem = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showNote = _useState6[0],\n        setCloseNote = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showDate = _useState8[0],\n        setCloseDate = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        filteredVal = _useState10[0],\n        setFilter = _useState10[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = await fetch('http://localhost:3001/todos');\n      const items = await url.json();\n      newitems = items.map(item => {\n        return {\n          id: Number(item.id),\n          text: item.text,\n          isComplete: JSON.parse(item.isComplete),\n          noteValue: item.noteValue,\n          updateDate: item.updateDate,\n          isSaveDate: JSON.parse(item.isSaveDate)\n        };\n      });\n      setItem(items);\n    }\n\n    fetchData();\n  }, []);\n\n  async function addToDb(url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    await response.json();\n  }\n\n  const handleInput = event => setInput(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const item = {\n      id: Date.now(),\n      text: input,\n      isComplete: false,\n      isNote: false,\n      noteValue: '',\n      isDueDate: false,\n      updateDate: '',\n      isSaveDate: false\n    };\n    const str = item.text.trim();\n    if (str === '') alert('Enter the values');else {\n      addToDb('http://localhost:3001/todos', item);\n      setItem([item, ...items]);\n    }\n    setInput('');\n  };\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key);\n    addToDb('http://localhost:3001/todos/deleteList', {\n      key\n    });\n    setItem(item);\n  };\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isComplete = !item.isComplete;\n        return item;\n      }\n\n      return item;\n    });\n    addToDb('http://localhost:3001/todos/checkBox', {\n      key\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleBlur = (key, event) => {\n    items.map(item => {\n      if (item.id === key) {\n        if (item.text === '') {\n          const textarea = document.getElementById('focus');\n          textarea.focus();\n        }\n      }\n    });\n    addToDb('http://localhost:3001/todos/updateText', items);\n  };\n\n  const handleNote = key => {\n    setCloseNote(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isNote = true;\n        return item;\n      } else {\n        item.isNote = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleDueDate = key => {\n    setCloseDate(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isDueDate = true;\n        return item;\n      } else {\n        item.isDueDate = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value.split('-').reverse().join('-');\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.isSaveDate = true;\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    addToDb('http://localhost:3001/todos/updateDate', newItems);\n    setItem(newItems);\n  };\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = '';\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    setItem(newItems);\n  };\n\n  const handleSaveNote = () => {\n    addToDb('http://localhost:3001/todos/updateNote', items);\n    setCloseNote(false);\n  };\n\n  const handleCloseDate = () => setCloseDate(false);\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') setFilter(items.filter(item => item.isComplete));\n    if (val === 'Pending') setFilter(items.filter(item => !item.isComplete));\n    if (val === 'All') setFilter(null);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(AddTodo, {\n    input: input,\n    onInput: event => handleInput(event),\n    onSubmit: event => handleSubmit(event),\n    onUpdatedFilter: filteredVal => handleFilterTodo(filteredVal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    items: filteredVal || items,\n    onDelete: key => handleDelete(key),\n    onCheckBox: key => handleCheckBox(key),\n    onUpdate: (key, event) => handleUpdate(key, event),\n    onBlur: (key, event) => handleBlur(key, event),\n    onNote: key => handleNote(key),\n    onDueDate: key => handleDueDate(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), items.map(item => {\n    return item.isNote && React.createElement(PopUpNote, {\n      key: item.id,\n      item: item,\n      onPopUpNote: (event, id) => handlePopUpNote(event, id),\n      show: showNote,\n      onSave: () => handleSaveNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    });\n  }), items.map(item => {\n    return item.isDueDate && React.createElement(PopUpDate, {\n      key: item.id,\n      id: item.id,\n      onUpdateDate: (event, id) => handleUpdateDate(event, id),\n      date: item.updateDate,\n      onSaveDate: id => handleSaveDate(id),\n      show: showDate,\n      onCloseDate: () => handleCloseDate(),\n      onNoDate: id => handleNoDate(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/admi/work/redis-todo/script/src/components/todoApp/TodoApp.js"],"names":["React","useState","useEffect","AddTodo","Todo","PopUpNote","PopUpDate","TodoApp","input","setInput","items","setItem","showNote","setCloseNote","showDate","setCloseDate","filteredVal","setFilter","fetchData","url","fetch","json","newitems","map","item","id","Number","text","isComplete","JSON","parse","noteValue","updateDate","isSaveDate","addToDb","data","response","method","body","stringify","headers","handleInput","event","target","value","handleSubmit","preventDefault","Date","now","isNote","isDueDate","str","trim","alert","handleDelete","key","filter","handleCheckBox","newItems","handleUpdate","handleBlur","textarea","document","getElementById","focus","handleNote","handlePopUpNote","handleDueDate","handleUpdateDate","split","reverse","join","handleSaveDate","handleNoDate","handleSaveNote","handleCloseDate","handleFilterTodo","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport AddTodo from '../addTodo/AddTodo'\nimport Todo from '../todo/Todo'\nimport PopUpNote from '../popUp/PopUpNote'\nimport PopUpDate from '../popUp/PopUpDate'\nimport './style.css'\n\nfunction TodoApp () {\n  const [input, setInput] = useState('')\n  const [items, setItem] = useState([])\n  const [showNote, setCloseNote] = useState(true)\n  const [showDate, setCloseDate] = useState(true)\n  const [filteredVal, setFilter] = useState(null)\n\n  useEffect(() => {\n    async function fetchData () {\n      const url = await fetch('http://localhost:3001/todos')\n      const items = await url.json()\n      newitems = items.map(item => {\n        return {\n          id: Number(item.id),\n          text: item.text,\n          isComplete: JSON.parse(item.isComplete),\n          noteValue: item.noteValue,\n          updateDate: item.updateDate,\n          isSaveDate: JSON.parse(item.isSaveDate)\n        }\n      })\n      setItem(items)\n    }\n    fetchData()\n  }, [])\n\n  async function addToDb (url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    await response.json()\n  }\n\n  const handleInput = event => setInput(event.target.value)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const item = {\n      id: Date.now(),\n      text: input,\n      isComplete: false,\n      isNote: false,\n      noteValue: '',\n      isDueDate: false,\n      updateDate: '',\n      isSaveDate: false\n    }\n    const str = item.text.trim()\n    if (str === '') alert('Enter the values')\n    else {\n      addToDb('http://localhost:3001/todos', item)\n      setItem([item, ...items])\n    }\n    setInput('')\n  }\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key)\n    addToDb('http://localhost:3001/todos/deleteList', { key })\n    setItem(item)\n  }\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isComplete = !item.isComplete\n        return item\n      }\n      return item\n    })\n    addToDb('http://localhost:3001/todos/checkBox', { key })\n    setItem(newItems)\n  }\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleBlur = (key, event) => {\n    items.map(item => {\n      if (item.id === key) {\n        if (item.text === '') {\n          const textarea = document.getElementById('focus')\n          textarea.focus()\n        }\n      }\n    })\n    addToDb('http://localhost:3001/todos/updateText', items)\n  }\n\n  const handleNote = key => {\n    setCloseNote(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isNote = true\n        return item\n      } else {\n        item.isNote = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleDueDate = key => {\n    setCloseDate(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isDueDate = true\n        return item\n      } else {\n        item.isDueDate = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value\n          .split('-')\n          .reverse()\n          .join('-')\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.isSaveDate = true\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    addToDb('http://localhost:3001/todos/updateDate', newItems)\n    setItem(newItems)\n  }\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = ''\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    setItem(newItems)\n  }\n\n  const handleSaveNote = () => {\n    addToDb('http://localhost:3001/todos/updateNote', items)\n    setCloseNote(false)\n  }\n\n  const handleCloseDate = () => setCloseDate(false)\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') setFilter(items.filter(item => item.isComplete))\n    if (val === 'Pending') setFilter(items.filter(item => !item.isComplete))\n    if (val === 'All') setFilter(null)\n  }\n\n  return (\n    <main>\n      <AddTodo\n        input={input}\n        onInput={event => handleInput(event)}\n        onSubmit={event => handleSubmit(event)}\n        onUpdatedFilter={filteredVal => handleFilterTodo(filteredVal)}\n      />\n      <ul>\n        <Todo\n          items={filteredVal || items}\n          onDelete={key => handleDelete(key)}\n          onCheckBox={key => handleCheckBox(key)}\n          onUpdate={(key, event) => handleUpdate(key, event)}\n          onBlur={(key, event) => handleBlur(key, event)}\n          onNote={key => handleNote(key)}\n          onDueDate={key => handleDueDate(key)}\n        />\n      </ul>\n\n      {items.map(item => {\n        return (\n          item.isNote && (\n            <PopUpNote\n              key={item.id}\n              item={item}\n              onPopUpNote={(event, id) => handlePopUpNote(event, id)}\n              show={showNote}\n              onSave={() => handleSaveNote()}\n            />\n          )\n        )\n      })}\n      {items.map(item => {\n        return (\n          item.isDueDate && (\n            <PopUpDate\n              key={item.id}\n              id={item.id}\n              onUpdateDate={(event, id) => handleUpdateDate(event, id)}\n              date={item.updateDate}\n              onSaveDate={id => handleSaveDate(id)}\n              show={showDate}\n              onCloseDate={() => handleCloseDate()}\n              onNoDate={id => handleNoDate(id)}\n            />\n          )\n        )\n      })}\n    </main>\n  )\n}\n\nexport default TodoApp\n"]},"metadata":{},"sourceType":"module"}