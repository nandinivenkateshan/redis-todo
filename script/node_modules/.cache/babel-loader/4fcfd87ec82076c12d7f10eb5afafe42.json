{"ast":null,"code":"import _slicedToArray from \"/home/admi/work/redis-todo/script/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/admi/work/redis-todo/script/src/components/TodoApp.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\nimport PopUpNote from './PopUpNote';\nimport PopUpDate from './PopUpDate';\nimport './style.css';\n\nfunction TodoApp() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItem = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showNote = _useState6[0],\n        setCloseNote = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showDate = _useState8[0],\n        setCloseDate = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        filteredVal = _useState10[0],\n        setFilter = _useState10[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = await fetch('http://localhost:3001/todos');\n      let items = await url.json();\n      items = items.map(item => {\n        return {\n          id: Number(item.id),\n          text: item.text,\n          isComplete: JSON.parse(item.isComplete),\n          noteValue: item.noteValue,\n          updateDate: item.updateDate,\n          isSaveDate: JSON.parse(item.isSaveDate)\n        };\n      });\n      setItem(items);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function addToDb(url, data) {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      await response.json();\n    }\n\n    add;\n  }, []);\n\n  const handleInput = event => setInput(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const item = {\n      id: Date.now(),\n      text: input,\n      isComplete: false,\n      isNote: false,\n      noteValue: '',\n      isDueDate: false,\n      updateDate: '',\n      isSaveDate: false\n    };\n    const str = item.text.trim();\n    if (str === '') alert('Enter the values');else {\n      addToDb('http://localhost:3001/todos', item);\n      setItem([item, ...items]);\n      console.log('items', item);\n    }\n    setInput('');\n  };\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key);\n    addToDb('http://localhost:3001/todos/deleteList', {\n      key\n    });\n    setItem(item);\n  };\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isComplete = !item.isComplete;\n        return item;\n      }\n\n      return item;\n    });\n    addToDb('http://localhost:3001/todos/checkBox', {\n      key\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value;\n        return item;\n      }\n\n      return item;\n    }); // console.log(newItems)\n\n    addToDb('http://localhost:3001/todos/updateText', newItems);\n    setItem(newItems);\n  };\n\n  const handleNote = key => {\n    setCloseNote(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isNote = true;\n        return item;\n      } else {\n        item.isNote = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    addToDb('http://localhost:3001/todos/updateNote', newItems);\n    setItem(newItems);\n  };\n\n  const handleDueDate = key => {\n    setCloseDate(true);\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isDueDate = true;\n        return item;\n      } else {\n        item.isDueDate = false;\n        return item;\n      }\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value.split('-').reverse().join('-');\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.isSaveDate = true;\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    addToDb('http://localhost:3001/todos/updateDate', newItems);\n    setItem(newItems);\n  };\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = '';\n        return item;\n      }\n\n      return item;\n    });\n    setCloseDate(false);\n    setItem(newItems);\n  };\n\n  const handleCloseNote = () => setCloseNote(false);\n\n  const handleCloseDate = () => setCloseDate(false);\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') {\n      setFilter(items.filter(item => item.isComplete));\n    }\n\n    if (val === 'Pending') setFilter(items.filter(item => !item.isComplete));\n    if (val === 'All') setFilter(null);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(AddTodo, {\n    input: input,\n    onInput: event => handleInput(event),\n    onSubmit: event => handleSubmit(event),\n    onUpdatedFilter: filteredVal => handleFilterTodo(filteredVal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    items: filteredVal || items,\n    onDelete: key => handleDelete(key),\n    onCheckBox: key => handleCheckBox(key),\n    onUpdate: (key, event) => handleUpdate(key, event),\n    onNote: key => handleNote(key),\n    onDueDate: key => handleDueDate(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), items.map(item => {\n    return item.isNote && React.createElement(PopUpNote, {\n      key: item.id,\n      item: item,\n      onPopUpNote: (event, id) => handlePopUpNote(event, id),\n      show: showNote,\n      onClose: () => handleCloseNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    });\n  }), items.map(item => {\n    return item.isDueDate && React.createElement(PopUpDate, {\n      key: item.id,\n      id: item.id,\n      onUpdateDate: (event, id) => handleUpdateDate(event, id),\n      date: item.updateDate,\n      onSaveDate: id => handleSaveDate(id),\n      show: showDate,\n      onCloseDate: () => handleCloseDate(),\n      onNoDate: id => handleNoDate(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/admi/work/redis-todo/script/src/components/TodoApp.js"],"names":["React","useState","useEffect","AddTodo","Todo","PopUpNote","PopUpDate","TodoApp","input","setInput","items","setItem","showNote","setCloseNote","showDate","setCloseDate","filteredVal","setFilter","fetchData","url","fetch","json","map","item","id","Number","text","isComplete","JSON","parse","noteValue","updateDate","isSaveDate","addToDb","data","response","method","body","stringify","headers","add","handleInput","event","target","value","handleSubmit","preventDefault","Date","now","isNote","isDueDate","str","trim","alert","console","log","handleDelete","key","filter","handleCheckBox","newItems","handleUpdate","handleNote","handlePopUpNote","handleDueDate","handleUpdateDate","split","reverse","join","handleSaveDate","handleNoDate","handleCloseNote","handleCloseDate","handleFilterTodo","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport AddTodo from './AddTodo'\nimport Todo from './Todo'\nimport PopUpNote from './PopUpNote'\nimport PopUpDate from './PopUpDate'\nimport './style.css'\n\nfunction TodoApp () {\n  const [input, setInput] = useState('')\n  const [items, setItem] = useState([])\n  const [showNote, setCloseNote] = useState(true)\n  const [showDate, setCloseDate] = useState(true)\n  const [filteredVal, setFilter] = useState(null)\n\n  useEffect(() => {\n    async function fetchData () {\n      const url = await fetch('http://localhost:3001/todos')\n      let items = await url.json()\n      items = items.map(item => {\n        return {\n          id: Number(item.id),\n          text: item.text,\n          isComplete: JSON.parse(item.isComplete),\n          noteValue: item.noteValue,\n          updateDate: item.updateDate,\n          isSaveDate: JSON.parse(item.isSaveDate)\n        }\n      })\n      setItem(items)\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    async function addToDb (url, data) {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      await response.json()\n    }\n    add\n  }, [])\n\n  const handleInput = event => setInput(event.target.value)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const item = {\n      id: Date.now(),\n      text: input,\n      isComplete: false,\n      isNote: false,\n      noteValue: '',\n      isDueDate: false,\n      updateDate: '',\n      isSaveDate: false\n    }\n    const str = item.text.trim()\n    if (str === '') alert('Enter the values')\n    else {\n      addToDb('http://localhost:3001/todos', item)\n      setItem([item, ...items])\n      console.log('items', item)\n    }\n    setInput('')\n  }\n\n  const handleDelete = key => {\n    const item = items.filter(item => item.id !== key)\n    addToDb('http://localhost:3001/todos/deleteList', { key })\n    setItem(item)\n  }\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isComplete = !item.isComplete\n        return item\n      }\n      return item\n    })\n    addToDb('http://localhost:3001/todos/checkBox', { key })\n    setItem(newItems)\n  }\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value\n        return item\n      }\n      return item\n    })\n    // console.log(newItems)\n    addToDb('http://localhost:3001/todos/updateText', newItems)\n    setItem(newItems)\n  }\n\n  const handleNote = key => {\n    setCloseNote(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isNote = true\n        return item\n      } else {\n        item.isNote = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handlePopUpNote = (event, id) => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.noteValue = event.target.value\n        return item\n      }\n      return item\n    })\n    addToDb('http://localhost:3001/todos/updateNote', newItems)\n    setItem(newItems)\n  }\n\n  const handleDueDate = key => {\n    setCloseDate(true)\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.isDueDate = true\n        return item\n      } else {\n        item.isDueDate = false\n        return item\n      }\n    })\n    setItem(newItems)\n  }\n\n  const handleUpdateDate = (event, key) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.updateDate = event.target.value\n          .split('-')\n          .reverse()\n          .join('-')\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleSaveDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.isSaveDate = true\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    addToDb('http://localhost:3001/todos/updateDate', newItems)\n    setItem(newItems)\n  }\n\n  const handleNoDate = id => {\n    const newItems = items.map(item => {\n      if (item.id === id) {\n        item.updateDate = ''\n        return item\n      }\n      return item\n    })\n    setCloseDate(false)\n    setItem(newItems)\n  }\n\n  const handleCloseNote = () => setCloseNote(false)\n\n  const handleCloseDate = () => setCloseDate(false)\n\n  const handleFilterTodo = val => {\n    if (val === 'Completed') {\n      setFilter(items.filter(item => item.isComplete))\n    }\n    if (val === 'Pending') setFilter(items.filter(item => !item.isComplete))\n    if (val === 'All') setFilter(null)\n  }\n\n  return (\n    <main>\n      <AddTodo\n        input={input}\n        onInput={event => handleInput(event)}\n        onSubmit={event => handleSubmit(event)}\n        onUpdatedFilter={filteredVal => handleFilterTodo(filteredVal)}\n      />\n      <ul>\n        <Todo\n          items={filteredVal || items}\n          onDelete={key => handleDelete(key)}\n          onCheckBox={key => handleCheckBox(key)}\n          onUpdate={(key, event) => handleUpdate(key, event)}\n          onNote={key => handleNote(key)}\n          onDueDate={key => handleDueDate(key)}\n        />\n      </ul>\n\n      {items.map(item => {\n        return (\n          item.isNote && (\n            <PopUpNote\n              key={item.id}\n              item={item}\n              onPopUpNote={(event, id) => handlePopUpNote(event, id)}\n              show={showNote}\n              onClose={() => handleCloseNote()}\n            />\n          )\n        )\n      })}\n      {items.map(item => {\n        return (\n          item.isDueDate && (\n            <PopUpDate\n              key={item.id}\n              id={item.id}\n              onUpdateDate={(event, id) => handleUpdateDate(event, id)}\n              date={item.updateDate}\n              onSaveDate={id => handleSaveDate(id)}\n              show={showDate}\n              onCloseDate={() => handleCloseDate()}\n              onNoDate={id => handleNoDate(id)}\n            />\n          )\n        )\n      })}\n    </main>\n  )\n}\n\nexport default TodoApp\n"]},"metadata":{},"sourceType":"module"}