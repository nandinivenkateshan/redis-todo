{"ast":null,"code":"var _jsxFileName = \"/home/admi/work/react-todo/src/Components/Todo.js\";\nimport React, { Component } from 'react';\nimport './style.css';\n\nclass Todo extends Component {\n  handleDelete(key) {\n    this.props.onDelete(key);\n  }\n\n  handleCheckBox(key) {\n    this.props.onCheckBox(key);\n  }\n\n  handleUpdate(key, event) {\n    this.props.onUpdate(key, event);\n  }\n\n  handleNote(key, event) {}\n\n  render() {\n    const todos = this.props.todos;\n    const list = todos.map(item => {\n      const checkBoxClass = item.complete ? 'strike-through' : 'text-area';\n      return React.createElement(\"li\", {\n        key: item.id,\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: () => this.handleCheckBox(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        name: \"textarea\",\n        value: item.text,\n        onChange: event => this.handleUpdate(item.id, event),\n        className: checkBoxClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, item.text), React.createElement(\"button\", {\n        className: \"delete-btn\",\n        onClick: () => this.handleDelete(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"note-btn\",\n        onClick: () => this.handleNote(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Note\"));\n    });\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, list);\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/admi/work/react-todo/src/Components/Todo.js"],"names":["React","Component","Todo","handleDelete","key","props","onDelete","handleCheckBox","onCheckBox","handleUpdate","event","onUpdate","handleNote","render","todos","list","map","item","checkBoxClass","complete","id","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,YAAY,CAAEC,GAAF,EAAO;AACjB,SAAKC,KAAL,CAAWC,QAAX,CAAoBF,GAApB;AACD;;AAEDG,EAAAA,cAAc,CAAEH,GAAF,EAAO;AACnB,SAAKC,KAAL,CAAWG,UAAX,CAAsBJ,GAAtB;AACD;;AAEDK,EAAAA,YAAY,CAAEL,GAAF,EAAOM,KAAP,EAAc;AACxB,SAAKL,KAAL,CAAWM,QAAX,CAAoBP,GAApB,EAAyBM,KAAzB;AACD;;AAEDE,EAAAA,UAAU,CAAER,GAAF,EAAOM,KAAP,EAAc,CAEvB;;AAEDG,EAAAA,MAAM,GAAI;AACR,UAAMC,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAzB;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AAC7B,YAAMC,aAAa,GAAID,IAAI,CAACE,QAAN,GAAkB,gBAAlB,GAAqC,WAA3D;AACA,aAAO;AAAI,QAAA,GAAG,EAAEF,IAAI,CAACG,EAAd;AAAkB,QAAA,SAAS,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,MAAM,KAAKb,cAAL,CAAoBU,IAAI,CAACG,EAAzB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEL;AAAU,QAAA,IAAI,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAEH,IAAI,CAACI,IAAtC;AAA4C,QAAA,QAAQ,EAAGX,KAAD,IAAW,KAAKD,YAAL,CAAkBQ,IAAI,CAACG,EAAvB,EAA2BV,KAA3B,CAAjE;AAAoG,QAAA,SAAS,EAAEQ,aAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+HD,IAAI,CAACI,IAApI,CAFK,EAGL;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAM,KAAKlB,YAAL,CAAkBc,IAAI,CAACG,EAAvB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHK,EAIL;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,MAAM,KAAKR,UAAL,CAAgBK,IAAI,CAACG,EAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJK,CAAP;AAMD,KARY,CAAb;AASA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAL,CADF;AAGD;;AA/B0B;;AAkC7B,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\n\nclass Todo extends Component {\n  handleDelete (key) {\n    this.props.onDelete(key)\n  }\n\n  handleCheckBox (key) {\n    this.props.onCheckBox(key)\n  }\n\n  handleUpdate (key, event) {\n    this.props.onUpdate(key, event)\n  }\n\n  handleNote (key, event) {\n\n  }\n\n  render () {\n    const todos = this.props.todos\n    const list = todos.map(item => {\n      const checkBoxClass = (item.complete) ? 'strike-through' : 'text-area'\n      return <li key={item.id} className='todo-list'>\n        <input type='checkbox' onChange={() => this.handleCheckBox(item.id)} />\n        <textarea name='textarea' value={item.text} onChange={(event) => this.handleUpdate(item.id, event)} className={checkBoxClass}>{item.text}</textarea>\n        <button className='delete-btn' onClick={() => this.handleDelete(item.id)}>Delete</button>\n        <button className='note-btn' onClick={() => this.handleNote(item.id)}>Note</button>\n      </li>\n    })\n    return (\n      <ul>{list}</ul>\n    )\n  }\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}