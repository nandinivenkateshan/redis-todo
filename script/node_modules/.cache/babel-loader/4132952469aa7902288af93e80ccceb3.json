{"ast":null,"code":"import _slicedToArray from \"/home/admi/work/react-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/admi/work/react-todo/src/Components/TodoApp.js\";\nimport React, { useState } from 'react';\nimport AddTodo from './AddTodo';\nimport Todo from './Todo';\nimport PopUpNote from './PopUpNote';\nimport './style.css';\n\nfunction TodoApp() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItem = _useState4[1];\n\n  const handleInput = event => setInput(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const item = {\n      id: items.length > 0 ? items[0].id + 1 : 1,\n      text: input,\n      complete: false,\n      note: false,\n      noteText: ''\n    };\n    const str = item.text.trim();\n    if (str === '') alert('Enter the values');else setItem([item, ...items]);\n    setInput('');\n  };\n\n  const handleDelete = key => {\n    const newItems = items.filter(item => item.id !== key);\n    setItem(newItems);\n  };\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.complete = !item.complete;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  const handleNote = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.note = !item.note;\n        item.noteText = event.target.value;\n        return item;\n      }\n\n      return item;\n    });\n    setItem(newItems);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(AddTodo, {\n    input: input,\n    onInput: event => handleInput(event),\n    onSubmit: event => handleSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Todo, {\n    items: items,\n    onDelete: key => handleDelete(key),\n    onCheckBox: key => handleCheckBox(key),\n    onUpdate: (key, event) => handleUpdate(key, event),\n    onPopUpNote: (key, event) => handleNote(key, event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), items.map(item => {\n    return item.note && React.createElement(PopUpNote, {\n      key: item.id,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/admi/work/react-todo/src/Components/TodoApp.js"],"names":["React","useState","AddTodo","Todo","PopUpNote","TodoApp","input","setInput","items","setItem","handleInput","event","target","value","handleSubmit","preventDefault","item","id","length","text","complete","note","noteText","str","trim","alert","handleDelete","key","newItems","filter","handleCheckBox","map","handleUpdate","handleNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport AddTodo from './AddTodo'\nimport Todo from './Todo'\nimport PopUpNote from './PopUpNote'\nimport './style.css'\n\nfunction TodoApp () {\n  const [input, setInput] = useState('')\n  const [items, setItem] = useState([])\n\n  const handleInput = event => setInput(event.target.value)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const item = {\n      id: (items.length > 0) ? items[0].id + 1 : 1,\n      text: input,\n      complete: false,\n      note: false,\n      noteText: ''\n    }\n    const str = item.text.trim()\n    if (str === '') alert('Enter the values')\n    else setItem([item, ...items])\n    setInput('')\n  }\n\n  const handleDelete = key => {\n    const newItems = items.filter(item => item.id !== key)\n    setItem(newItems)\n  }\n\n  const handleCheckBox = key => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.complete = !item.complete\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleUpdate = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.text = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  const handleNote = (key, event) => {\n    const newItems = items.map(item => {\n      if (item.id === key) {\n        item.note = !item.note\n        item.noteText = event.target.value\n        return item\n      }\n      return item\n    })\n    setItem(newItems)\n  }\n\n  return (\n    <div>\n      <AddTodo input={input} onInput={event => handleInput(event)} onSubmit={event => handleSubmit(event)} />\n      <Todo\n        items={items} onDelete={(key) => handleDelete(key)}\n        onCheckBox={(key) => handleCheckBox(key)} onUpdate={(key, event) => handleUpdate(key, event)}\n        onPopUpNote={(key, event) => handleNote(key, event)}\n      />\n      {items.map(item => {\n        return (item.note && <PopUpNote key={item.id} item={item} />)\n      })}\n    </div>\n  )\n}\n\nexport default TodoApp\n"]},"metadata":{},"sourceType":"module"}